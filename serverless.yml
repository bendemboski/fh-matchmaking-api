service: fh-matchmaking-api

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-west-2
  profile: fh
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "cognito-idp:AdminCreateUser"
        - "cognito-idp:AdminAddUserToGroup"
        - "cognito-idp:ListUsersInGroup"
        - "cognito-idp:AdminGetUser"
        - "cognito-idp:AdminListGroupsForUser"
        - "cognito-idp:AdminUpdateUserAttributes"
      Resource:
        Fn::Join:
          - ''
          -
            - 'arn:aws:cognito-idp:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':userpool/'
            - Ref: UserPool

functions:
  app:
    handler: app.server # reference the file and exported method
    environment:
      USER_POOL:
        Ref: UserPool
      USER_POOL_CLIENT:
        Ref: UserPoolClient
      REGION:
        Ref: AWS::Region
      HOST_PROFILES_TABLE:
        Ref: HostProfilesTable
      RESIDENT_PROFILES_TABLE:
        Ref: ResidentProfilesTable

    events: # events trigger lambda functions
      - http: # this is an API Gateway HTTP event trigger
          path: /
          method: ANY
          cors: true
      - http: # all routes get proxied to the Express router
          path: /{proxy+}
          method: ANY
          cors: true

resources:
  Resources:
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-user-pool
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: true
          UnusedAccountValidityDays: 365
        AutoVerifiedAttributes:
          - "email"
        UsernameAttributes:
          - "email"
        Policies:
          PasswordPolicy:
            MinimumLength: 8
        Schema:
          - Name: given_name
            AttributeDataType: String
            Mutable: true
            Required: true
          - Name: family_name
            AttributeDataType: String
            Mutable: true
            Required: true
          - Name: birthdate
            AttributeDataType: String
            Mutable: true
            Required: false
            StringAttributeConstraints:
              MinLength: 10
              MaxLength: 10
          - Name: phone_number
            AttributeDataType: String
            Mutable: true
            Required: false
    UserPoolAdminGroup:
      Type: AWS::Cognito::UserPoolGroup
      Properties:
        Description: Admin users
        GroupName: admins
        UserPoolId:
          Ref: UserPool
    UserPoolHostGroup:
      Type: AWS::Cognito::UserPoolGroup
      Properties:
        Description: Host users
        GroupName: hosts
        UserPoolId:
          Ref: UserPool
    UserPoolCaseworkerGroup:
      Type: AWS::Cognito::UserPoolGroup
      Properties:
        Description: Caseworker users
        GroupName: caseworkers
        UserPoolId:
          Ref: UserPool
    UserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:service}-client
        GenerateSecret: false
        UserPoolId:
          Ref: UserPool
    AdminUser:
      Type: AWS::Cognito::UserPoolUser
      Properties:
        DesiredDeliveryMediums:
          - EMAIL
        Username: bendemboski@gmail.com
        UserAttributes:
          - Name: given_name
            Value: Ben
          - Name: family_name
            Value: Demboski
          - Name: email
            Value: bendemboski@gmail.com
          - Name: email_verified
            Value: false
        UserPoolId:
          Ref: UserPool
    HostProfilesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-host-profiles
        AttributeDefinitions:
          - AttributeName: User
            AttributeType: S
          - AttributeName: Visible
            AttributeType: N
        KeySchema:
          - AttributeName: User
            KeyType: HASH
          - AttributeName: Visible
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 5
    ResidentProfilesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-resident-profiles
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
          - AttributeName: Caseworker
            AttributeType: S
          - AttributeName: MatchedHost
            AttributeType: S
        KeySchema:
          - AttributeName: Caseworker
            KeyType: HASH
          - AttributeName: Id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 5
        GlobalSecondaryIndexes:
          - IndexName: matches
            KeySchema:
              - AttributeName: MatchedHost
                KeyType: HASH
            Projection:
              NonKeyAttributes:
                - FirstName
                - LastName
              ProjectionType: INCLUDE
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5
    MediaBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-media

  Outputs:
    UserPoolId:
      Value:
        Ref: UserPool
      Export:
        Name: "UserPool::Id"
    UserPoolClientId:
      Value:
        Ref: UserPoolClient
      Export:
        Name: "UserPoolClient::Id"
    HostProfilesTableName:
      Value:
        Ref: HostProfilesTable
      Export:
        Name: "HostProfilesTable::Name"
    ResidentProfilesTableName:
      Value:
        Ref: ResidentProfilesTable
      Export:
        Name: "ResidentProfilesTable::Name"
    MediaBucketName:
      Value:
        Ref: MediaBucket
      Export:
        Name: "MediaBucket::Name"
